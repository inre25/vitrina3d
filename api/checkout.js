// api/checkout.js
export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ ok: false, errors: ["METHOD_NOT_ALLOWED"] });
  }

  const {
    name = "",
    phone = "",
    email = "",
    comment = "",
    cart = [],
    total = 0,
  } = req.body || {};

  // –≤–∞–ª–∏–¥–∞—Ü–∏—è
  const errors = [];
  if (!name.trim()) errors.push("NO_NAME");
  if (!phone.trim()) errors.push("NO_PHONE");
  if (!Array.isArray(cart) || cart.length === 0) errors.push("EMPTY_CART");
  if (errors.length) return res.status(400).json({ ok: false, errors });

  // —Ç–æ–ª—å–∫–æ Telegram
  const tkn = process.env.TELEGRAM_BOT_TOKEN;
  const chat = process.env.TELEGRAM_CHAT_ID;
  if (!tkn || !chat) {
    return res
      .status(500)
      .json({ ok: false, errors: ["MISSING_TELEGRAM_ENV"] });
  }

  // —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã
  const cartLines =
    cart
      .map((p, i) => {
        const qty = p.qty || 1;
        const price = p.price != null ? `${p.price} —Ä—É–±.` : "";
        const line1 = `${i + 1}. ${p.title || p.name || "–¢–æ–≤–∞—Ä"} ‚Äî ${qty} —à—Ç${
          price ? ` √ó ${price}` : ""
        }`;

        // –ò–ú–ï–ù–ê –ë–ï–†–ï–ú –¢–û–õ–¨–ö–û –ò–ó –ó–ê–ö–ê–ó–ê (–Ω–∏–∫–∞–∫–∏—Ö —Å–ª–æ–≤–∞—Ä–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
        const opts = [];
        // –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç A/B
        if (p.colorA || p.colorAName)
          opts.push(`—Ü–≤–µ—Ç A: ${p.colorAName || p.colorA}`);
        if (p.colorB || p.colorBName)
          opts.push(`—Ü–≤–µ—Ç B: ${p.colorBName || p.colorB}`);
        // —Å—Ç–∞—Ä—ã–π –æ–¥–∏–Ω–æ—á–Ω—ã–π —Ü–≤–µ—Ç
        if (!p.colorA && !p.colorB && (p.color || p.colorName)) {
          opts.push(`—Ü–≤–µ—Ç: ${p.colorName || p.color}`);
        }
        if (p.scale) opts.push(`–º–∞—Å—à—Ç–∞–±: ${Number(p.scale).toFixed(1)}√ó`);

        const print = [];
        if (p.layerHeight) print.push(`—Å–ª–æ–π: ${p.layerHeight} –º–º`);
        if (p.layers) print.push(`—Å–ª–æ—ë–≤: ${p.layers}`);
        if (p.currentLayer != null) {
          const h = p.heightMM != null ? ` (${p.heightMM} –º–º)` : "";
          print.push(`—Ç–µ–∫—É—â–∏–π —Å–ª–æ–π: ${p.currentLayer}${h}`);
        }

        const line2 = opts.length ? `   –û–ø—Ü–∏–∏: ${opts.join(", ")}` : "";
        const line3 = print.length ? `   –ü–µ—á–∞—Ç—å: ${print.join(", ")}` : "";
        return [line1, line2, line3].filter(Boolean).join("\n");
      })
      .join("\n") || "(–ø—É—Å—Ç–æ)";

  const text = [
    `üõí –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞`,
    `–ò–º—è: ${name}`,
    `–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`,
    `Email: ${email || "-"}`,
    `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || "-"}`,
    ``,
    `–°–æ—Å—Ç–∞–≤ –∫–æ—Ä–∑–∏–Ω—ã:`,
    cartLines,
    ``,
    `–ò—Ç–æ–≥–æ: ${total} —Ä—É–±.`,
    `–í—Ä–µ–º—è: ${new Date().toISOString().replace("T", " ").slice(0, 19)} UTC`,
  ].join("\n");

  try {
    await fetch(`https://api.telegram.org/bot${tkn}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ chat_id: chat, text }),
    });

    return res
      .status(200)
      .json({ ok: true, channels: { telegram: true }, errors: [] });
  } catch (e) {
    return res.status(200).json({
      ok: true,
      channels: { telegram: false },
      errors: ["TELEGRAM_SEND_FAILED", String(e?.message || e)],
    });
  }
}
